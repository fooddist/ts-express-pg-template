########################################################
# Service configuration

## Service nickname used as a service id in network calls to other services
SERVICE_NICKNAME=service

## Service host and port
HOST=http://localhost
PORT=8080

## CORS configuration
## Note: You cannot use USE_CREDENTIALS=true and ORIGIN=* at the same time
## ORIGIN, ALLOWED_METHODS and ALLOWED_HEADERS expect comma-separated strings
ORIGIN=*
USE_CREDENTIALS=false
ALLOWED_METHODS=GET,PUT,POST,DELETE
ALLOWED_HEADERS=Content-Type,Authorization
CORS_DEBUG_LOG=true

## API rate limiting configuration
### Rate limiter request window, ms
RL_WINDOW=100000
### Max number of requests allowed in the window
RL_MAX=100

## Root user configuration
GENERATE_ROOT_USER=true



########################################################
# Redis configuration

## Redis Store
REDIS_STORE_CONNECTION_URL=redis://localhost:6379/0
REDIS_STORE_PREFIX=service

## Redis Cache
REDIS_CACHE_CONNECTION_URL=redis://localhost:6380/0
REDIS_CACHE_PREFIX=service



########################################################
# Postgres configuration

## DB Connection string including database name, user and password if any
## Note that database with provided name has to be created beforehand
DB_CONNECTION_STRING=postgres://localhost:5432/postgres

## Log all database transactions
DB_DEBUG_LOGGING=false


########################################################
# External services

## Token time to live (it's adviced to keep it short for security reasons)
EXT_TOKEN_TTL_SEC=3600

## External Service
EXTERNAL_SPID_BASEURL=https://google.com
EXTERNAL_SPID_KEY=qwerty1234567890